from manim import *
import numpy as np

class FirstScene(Scene):
    #apresentando o problema
    def construct(self):
        self.camera.background_color = WHITE
        #criando quadrado do problema
        square = Square(side_length = 10).set_fill(RED, opacity = 0.5)
        introduction = Text('How to find the x area?', color = BLACK).scale(2).next_to(square, DOWN)
        square.set_z_index(2)
        square.set_stroke(BLACK)
        #legenda lateral superior
        square_label1 = Text('10', color = BLACK).scale(2).next_to(square, UP)
        #legenda lateral esquerda
        square_label2 = Text('10', color = BLACK).scale(2).next_to(square, LEFT)
        circle1 = Circle(radius = 5).set_fill(WHITE, opacity = 2.5)
        circle1.shift(5*LEFT)
        circle1.set_stroke(BLACK)
        clipped_circle1 = Intersection(square, circle1, color = RED)
        circle2 = Circle(radius = 5).set_fill(WHITE, opacity = 2.5)
        circle2.shift(5*UP)
        circle2.set_stroke(BLACK)
        clipped_circle2 = Intersection(square, circle2, color = RED)
        variable_label = Text('X', color = BLACK).scale(2).shift(2*DOWN, 2*RIGHT)

        self.play(Create(square), Create(circle1), Create(circle2))
        self.play(Transform(circle1, clipped_circle1), Transform(circle2, clipped_circle2))
        self.play(Write(square_label1))
        self.play(Write(square_label2))
        self.play(Write(variable_label))
        self.play(Write(introduction))
        self.play(Unwrite(introduction), Unwrite(square_label1), Unwrite(square_label2))
        self.wait(3)

        square2 = Square(side_length = 5,).set_fill(RED, opacity = 2.5).shift(2.5*LEFT, 2.5*UP)
        square2.set_z_index(3)
        square2.set_stroke(BLACK)
        square_label3 = Text('5', color = BLACK).scale(1).shift(6*UP, 3*LEFT)
        square_label4 = Text('5', color = BLACK).scale(1).shift(6*LEFT, 3*UP)
        square_label5 = Text('4 = The entire area of the big square', color = BLACK).scale(1).shift(7*DOWN)
        hwfind0 = Text('3', color = BLACK).scale(2).shift(3*LEFT,3*UP)
        hwfind0.set_z_index(4)
        hwfind1 = Text('1', color = BLACK).scale(2).shift(3*UP, 2*RIGHT)
        hwfind2 = Text('2', color = BLACK).scale(2).shift(3*LEFT, 2*DOWN)
        step1 = MathTex(r'1 = 2 = \frac{\pi . (5)^2}{4} = 19,63', color = BLACK).scale(2).shift(8*UP)
        step2 = MathTex(r'3 = 10.10 = 100', color = BLACK).scale(2).shift(8*UP)
        step3 = MathTex(r'4 = 5.5 = 25', color = BLACK).scale(2).shift(8*UP)
        step4 = MathTex(r'X = ', color = BLACK).scale(2).shift(8*UP)
        step5 = MathTex(r'X = 4 ', color = BLACK).scale(2).shift(8*UP)
        step6 = MathTex(r'X = 4 - 1', color = BLACK).scale(2).shift(8*UP)
        step7 = MathTex(r'X = 4 - 1 + 2', color = BLACK).scale(2).shift(8*UP)
        step8 = MathTex(r'X = 4 - 1 + 2 + 3', color = BLACK).scale(2).shift(8*UP)
        step9 = MathTex(r'X = 100 - 2.19.63 + 25 = 35,73  sq units', color = BLACK).scale(1).shift(8*UP)
        step10 = MathTex(r'X = 35,73  sq units', color = BLACK).scale(2).shift(8*UP)
        self.play(Create(square2))
        self.play(Write(square_label3), Write(square_label4))
        self.play(Unwrite(square_label3), Unwrite(square_label4))
        self.play(Write(hwfind0), Write(hwfind1), Write(hwfind2), Write(square_label5))
        self.wait(1)
        self.play(Write(step1))
        self.wait(1)
        self.play(ReplacementTransform(step1, step2))
        self.wait(1)
        self.play(ReplacementTransform(step2, step3))
        self.wait(1)
        self.play(ReplacementTransform(step3, step4))
        self.play(ApplyWave(step4))
        self.wait(1)
        self.play(ReplacementTransform(step4, step5))
        self.play(ApplyWave(step5))
        self.wait(0.3)
        self.play(ReplacementTransform(step5, step6))
        self.play(ApplyWave(step6))
        self.wait(0.3)
        self.play(ReplacementTransform(step6, step7))
        self.play(ApplyWave(step7))
        self.wait(0.3)
        self.play(ReplacementTransform(step7, step8))
        self.play(ApplyWave(step8))
        self.wait(0.3)
        self.play(ReplacementTransform(step8, step9))
        self.play(ApplyWave(step9))
        self.wait(0.3)
        self.play(ReplacementTransform(step9, step10))
        self.play(ApplyWave(step10))
        self.wait(1)
        self.wait(3)

